# This is a basic workflow to help you get started with Actions

name: CIIIIIIII

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev_matheus" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: '⚙️ Choose Terraform action'
        options:
          - deploy
          - destroy
        default: deploy

jobs:
  code-test:
    name: 🐍 Code Python Test
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    container: python:3.11-bullseye
    steps:
      - name: 🕵🏾 Checkout code
        uses: actions/checkout@v4

      - name: 👨🏾‍🔧 Install dependencies
        run: |
          apt-get update
          apt-get install -y build-essential

      - name: Run tests
        run: |
          echo "Running tests 👀"
          sleep 5
          echo "Tests successfully completed 🫦"

  tf-test:
    name: ⚙️ Terraform Test
    runs-on: ubuntu-latest
    needs: code-test
    if: github.ref != 'refs/heads/main'
    container:
      image: ${{ vars.TF_DEPLOY_IMAGE }}
      options: --platform=linux/amd64
    steps:
      - name: 🕵🏾 Checkout code
        uses: actions/checkout@v4

      - name: 🧑🏾‍✈️ Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: $${{ vars.GCP_PROJECT_ID}}

      - name: 🕵🏾 validate Terraform configuration
        run: |
          cd ./configs/terraform
          echo '🚧 Creating credentials file... 🚧'
          echo '${{ secrets.TERRAFORM_TFVARS }}' > terraform.tfvars
          terraform init
          terraform workspace select dev || terraform workspace new dev
          terraform validate
          terraform test
          echo "Whole Terraform configuration is valid ✅"

      - name: 💁🏾‍♂️ Clean up
        run: rm -f ./configs/terraform/*.json


  tf-deploy-prd:
    name: ⚙️ Terraform Deploy (PRD)
    runs-on: ubuntu-latest
    needs: tf-test
    if: github.event.inputs.action == 'deploy'
    container:
      image: ${{ vars.TF_DEPLOY_IMAGE }}
      options: --platform=linux/amd64
    steps:
      - name: 🕵🏾 Checkout code
        uses: actions/checkout@v4

      - name: 🧑🏾‍✈️ Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: $${{ vars.GCP_PROJECT_ID}}

      - name: Terraform Deploy
        run: |
          cd ./configs/terraform
          echo '🚧 Creating credentials file... 🚧'
          echo '${{ secrets.TERRAFORM_TFVARS }}' > terraform.tfvars
          terraform init
          terraform workspace select dev || terraform workspace new dev
          terraform apply -auto-approve
          echo "Whole Terraform configuration is applied successfully ✅"

      - name: 💁🏾‍♂️ Clean up
        run: rm -f ./configs/terraform/*.json


  tf-destroy-prd:
    name: 🔨 Terraform Destroy (PRD)
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    container:
      image: ${{ vars.TF_DEPLOY_IMAGE }}
      options: --platform=linux/amd64
    steps:
      - name: 🕵🏾 Checkout code
        uses: actions/checkout@v4

      - name: 🧑🏾‍✈️ Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: $${{ vars.GCP_PROJECT_ID}}

      - name: Terraform Destroy
        run: |
          cd ./configs/terraform
          echo '🚧 Creating tfvars file... 🚧'
          echo '${{ secrets.TERRAFORM_TFVARS }}' > terraform.tfvars
          terraform init
          terraform workspace select dev || terraform workspace new dev
          terraform destroy -auto-approve
          echo "✅ Terraform resources destroyed"

      - name: 💁🏾‍♂️ Clean up
        run: rm -f ./configs/terraform/*.json